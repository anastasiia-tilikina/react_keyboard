{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","initialMessage","updatedMessage","handleKey","e","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAe,CACbC,WAAY,IAFhB,EAKEC,eAAiB,0BALnB,EAOEC,eAAiB,0BAPnB,EAiBEC,UAAY,SAACC,GACX,EAAKC,SAAS,CACZL,WAAYI,EAAEE,OAnBpB,uDASE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,aAV5C,kCAaE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,aAd/C,oBAuBE,WACE,IAAQH,EAAeS,KAAKV,MAApBC,WAER,OACE,qBAAKW,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACIX,EAAD,UAEMS,KAAKP,eAFX,aAE8BF,EAF9B,KACGS,KAAKR,uBA9BnB,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.c4e28e9d.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string\n};\n\nexport class App extends Component<{}, State> {\n  state: State = {\n    pressedKey: '',\n  };\n\n  initialMessage = 'Nothing was pressed yet';\n\n  updatedMessage = 'The last pressed key is';\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleKey);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKey);\n  }\n\n  handleKey = (e: KeyboardEvent) => {\n    this.setState({\n      pressedKey: e.key,\n    });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {!pressedKey\n            ? this.initialMessage\n            : `${this.updatedMessage} [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}